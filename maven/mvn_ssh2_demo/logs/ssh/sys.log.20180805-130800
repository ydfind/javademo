[log2][INFO ][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$InfoLogger.log(Slf4jMLog.java:212)] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge0yu9x2cr4j4wxz8gf|6fc29daa, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.cj.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge0yu9x2cr4j4wxz8gf|6fc29daa, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/maven?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)] - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)] - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)] - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:207)] - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:204)] - com.mchange.v2.resourcepool.BasicResourcePool@6b649efa config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:204)] - Created new pool for auth, username (masked): 'ro******'.
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:204)] - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:204)] - awaitAvailable(): [unknown]
[log2][DEBUG][2018-08-05 13:08][method:com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger.log(Slf4jMLog.java:204)] - com.mchange.v2.c3p0.impl.NewProxyConnection@35563e4c [wrapping: com.mysql.cj.jdbc.ConnectionImpl@6dd79214]: close() called more than once.
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean 'sessionFactory'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)] - Creating shared instance of singleton bean 'transactionManager'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449)] - Creating instance of bean 'transactionManager'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)] - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)] - Returning cached instance of singleton bean 'sessionFactory'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1670)] - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[log2][INFO ][2018-08-05 13:08][method:org.springframework.orm.hibernate5.HibernateTransactionManager.afterPropertiesSet(HibernateTransactionManager.java:378)] - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge0yu9x2cr4j4wxz8gf|6fc29daa, dataSourceName -> 1hge0yu9x2cr4j4wxz8gf|6fc29daa ]] of Hibernate SessionFactory for HibernateTransactionManager
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean 'transactionManager'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)] - Creating shared instance of singleton bean 'txAdvice'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449)] - Creating instance of bean 'txAdvice'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)] - Eagerly caching bean 'txAdvice' to allow for resolving potential circular references
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)] - Returning cached instance of singleton bean 'transactionManager'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449)] - Creating instance of bean '(inner bean)#4d69d288'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95)] - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95)] - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95)] - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95)] - Adding transactional method [find*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95)] - Adding transactional method [*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean '(inner bean)#4d69d288'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1670)] - Invoking afterPropertiesSet() on bean with name 'txAdvice'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean 'txAdvice'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)] - Creating shared instance of singleton bean 'customerDao'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449)] - Creating instance of bean 'customerDao'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)] - Eagerly caching bean 'customerDao' to allow for resolving potential circular references
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)] - Returning cached instance of singleton bean 'sessionFactory'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1670)] - Invoking afterPropertiesSet() on bean with name 'customerDao'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean 'customerDao'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)] - Creating shared instance of singleton bean 'customerService'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449)] - Creating instance of bean 'customerService'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)] - Eagerly caching bean 'customerService' to allow for resolving potential circular references
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)] - Returning cached instance of singleton bean 'customerDao'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485)] - Finished creating instance of bean 'customerService'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785)] - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1537c744]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)] - Returning cached instance of singleton bean 'lifecycleProcessor'
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:150)] - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport.java:101)] - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name spring.liveBeansView.mbeanDomain is not bound in this Context
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:150)] - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.jndi.JndiPropertySource.getProperty(JndiPropertySource.java:99)] - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name spring.liveBeansView.mbeanDomain is not bound in this Context. Returning null.
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92)] - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
[log2][DEBUG][2018-08-05 13:08][method:org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:339)] - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[log2][INFO ][2018-08-05 13:08][method:org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:344)] - Root WebApplicationContext: initialization completed in 4905 ms
[log2][DEBUG][2018-08-05 13:08][method:freemarker.log._Log4jLoggerFactory$Log4jLogger.debug(_Log4jLoggerFactory.java:44)] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("zh_CN", UTF-8, parsed); will try to load it.
[log2][DEBUG][2018-08-05 13:08][method:freemarker.log._Log4jLoggerFactory$Log4jLogger.debug(_Log4jLoggerFactory.java:44)] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
[log2][DEBUG][2018-08-05 13:08][method:freemarker.log._Log4jLoggerFactory$Log4jLogger.debug(_Log4jLoggerFactory.java:44)] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("zh_CN", UTF-8, parsed) from "jar:file:/C:/Users/Yudi/.m2/repository/org/apache/struts/struts2-core/2.5.16/struts2-core-2.5.16.jar!/org/apache/struts2/dispatcher/error.ftl"
